
Memory Configuration

Name             Origin             Length             Attributes
FLASH            0x00000000         0x00040000         xr
SRAM             0x20000000         0x00008000         xrw
*default*        0x00000000         0xffffffff

Linker script and memory map

                0x00000000                PROVIDE (_intvecs_base_address = 0x0)

.intvecs
 *(.intvecs)

.text           0x00000000        0xe
 CREATE_OBJECT_SYMBOLS
 *(.text)
 .text          0x00000000        0xe main.o
                0x00000000                main
 *(.text.*)

.glue_7         0x00000010        0x0
 .glue_7        0x00000010        0x0 linker stubs

.glue_7t        0x00000010        0x0
 .glue_7t       0x00000010        0x0 linker stubs

.vfp11_veneer   0x00000010        0x0
 .vfp11_veneer  0x00000010        0x0 linker stubs

.v4_bx          0x00000010        0x0
 .v4_bx         0x00000010        0x0 linker stubs

.iplt           0x00000010        0x0
 .iplt          0x00000010        0x0 main.o

.rel.dyn        0x00000010        0x0
 .rel.iplt      0x00000010        0x0 main.o

.rodata
 *(.rodata)
 *(.rodata*)

.data           0x20000000        0x0 load address 0x00000010
                0x00000010                __data_load__ = LOADADDR (.data)
                0x20000000                __data_start__ = .
 *(.data)
 .data          0x20000000        0x0 main.o
 *(.data*)
                0x20000000                . = ALIGN (0x4)
                0x20000000                __data_end__ = .

.igot.plt       0x20000000        0x0 load address 0x00000010
 .igot.plt      0x20000000        0x0 main.o

.bss            0x20000000        0x0 load address 0x00000010
                0x20000000                __bss_start__ = .
 *(.shbss)
 *(.bss)
 .bss           0x20000000        0x0 main.o
 *(.bss.*)
 *(COMMON)
                0x20000000                . = ALIGN (0x4)
                0x20000000                __bss_end__ = .

.stack          0x20000000        0x0 load address 0x00000010
                0x20000000                _stack = .
                0x20000000                __stack = .
 *(.stack)
LOAD main.o
OUTPUT(app_output.elf elf32-littlearm)
LOAD linker stubs

.comment        0x00000000       0x4c
 .comment       0x00000000       0x4c main.o
                                 0x4d (size before relaxing)

.ARM.attributes
                0x00000000       0x2e
 .ARM.attributes
                0x00000000       0x2e main.o
